// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?       @unique
  verifiedEmail  DateTime?
  hashedPassword String?
  createAt       DateTime?     @default(now())
  updatedAt      DateTime?     @updatedAt
  favoritesId    String[]      @db.ObjectId
  //Relations
  accounts       Accounts[]
  listings       Listings[]
  reservations   Reservation[]
}

model Accounts {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  //relationship with the user model
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Listings {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  userId        String   @db.ObjectId
  title         String
  description   String
  imageSrc      String
  category      String
  roomCount     Int
  bathroomCount Int
  guestCount    Int
  locationValue String
  price         Int
  createdAt     DateTime @default(now())

  //relationship with the user model
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  reservations Reservation[]
}

model Reservation {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  listingId  String   @db.ObjectId
  startDate  DateTime
  endDate    DateTime
  totalPrice Int
  createdAt  DateTime @default(now())

  //relationships to User and Listing models
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  listings Listings @relation(fields: [listingId], references: [id], onDelete: Cascade)
}
